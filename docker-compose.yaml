version: '3'

services: 

   # nome do serviço
  app:
    build: 
      context: node
    # nome do container
    container_name: app
    # dockerrize instalado no dockerfile, aguarda o container db de 20 em 20 seg, 
    # até q ele suba completamente, após o container subir, ele chama o entrypoint
    # que está na imagem padrão do node
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh
    networks: 
      - node-network
    # volumes para o container
    volumes: 
      - ./node:/usr/src/app
    # para entrar no container de forma iterativa
    tty: true
    # liberando a porta 3000 local para se comunicar com a 3000 do container
    ports: 
      - "3000:3000"
    # dependencia do container app, depende do container db
    depends_on: 
       - db

  # nome do serviço
  db:
    # nome da imagem utilizadas
    image: mysql:5.7
    # configuração exclusiva para o mysql
    command: --innodb-use-native-aio=0
    # nome do container
    container_name: db
    # caso o container caia, ele inicia novamente
    restart: always
    # para entrar no container de forma iterativa
    tty: true
    # volumes para o container
    volumes: 
      - ./mysql:/var/lib/mysql
    # setando a variável de ambiente para o mysql
    environment: 
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
    # network para a comunicação entre os contaners
    networks: 
      - node-network

# criando a network
networks: 
  node-network:
    driver: bridge    